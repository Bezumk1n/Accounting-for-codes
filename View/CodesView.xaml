<UserControl x:Class="CodesAccounting.View.CodesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CodesAccounting.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Content="Добавить коды"
                    Command="{Binding AddCodesCommand}"
                    Width="150"
                    Margin="5">
            </Button>
            <Button Content="Экспортировать коды"
                    Command="{Binding ExportCodesCommand}"
                    Width="150"
                    Margin="5">
            </Button>
            <TextBox Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Width="150"
                     Margin="5"></TextBox>
            <Button Content="Найти код/показать все"
                    Command="{Binding FindCommand}"
                    Width="auto"
                    Margin="5">
            </Button>
            <CheckBox Content="Скрыть использованные коды"
                      IsChecked="{Binding HideUsedCodes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      VerticalAlignment="Center"></CheckBox>
        </StackPanel>
        <DataGrid Grid.Row="1"
                  ItemsSource="{Binding Codes}"
                  SelectedItem="{Binding SelectedItem}"
                  AutoGenerateColumns="False"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Active}" Value="Нет">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Orange"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Header="ISBN" Binding="{Binding ISBN}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Наименование" Binding="{Binding Title}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Код" Binding="{Binding Code}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Срок использования" Binding="{Binding Month}"></DataGridTextColumn>
                <!--
                <DataGridTextColumn IsReadOnly="True" Header="Курс" Binding="{Binding Course}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Уровень" Binding="{Binding Level}"></DataGridTextColumn>
                -->
                <DataGridTextColumn IsReadOnly="True" Header="Дата добавления" Binding="{Binding AddDate}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Дата использования" Binding="{Binding UseDate}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Активен" Binding="{Binding Active}"></DataGridTextColumn>
                <DataGridCheckBoxColumn IsReadOnly="False" Header="Забрать" Binding="{Binding IsUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="check"></DataGridCheckBoxColumn>
                <DataGridTextColumn IsReadOnly="False" Header="Комментарий" Binding="{Binding Comments,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="comment"></DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Разблокировать" Command="{Binding UnblockCommand}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>  
    </Grid>
</UserControl>
